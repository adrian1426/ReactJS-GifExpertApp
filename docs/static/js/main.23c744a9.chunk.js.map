{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","reportWebVitals.js","index.js"],"names":["AddCategory","props","useState","inputValue","setInputValue","setCategorias","onSubmit","e","preventDefault","trim","length","categorias","type","value","onChange","target","placeholder","GifGridItem","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","respuesta","json","data","gifs","map","image","id","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","img","useFetchGifs","imagenes","GifExpertApp","cat","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAoCeA,EAjCK,SAACC,GACnB,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACOC,EAAeJ,EAAfI,cAeP,OACE,sBAAMC,SAVW,SAAAC,GACjBA,EAAEC,iBAECL,EAAWM,OAAOC,OAAO,IAC1BL,GAAc,SAAAM,GAAU,OAAGR,GAAH,mBAAiBQ,OACzCP,EAAc,MAKhB,SACE,uBACEQ,KAAK,OACLC,MAAOV,EACPW,SAlBiB,SAAAP,GACrBH,EAAcG,EAAEQ,OAAOF,QAkBnBG,YAAY,0E,QCfLC,EATK,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,MAAMC,EAAS,EAATA,IAC1B,OACE,sBAAKC,UAAU,6CAAf,UACE,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,Q,uBCNGK,EAAO,uCAAC,WAAMC,GAAN,uBAAAC,EAAA,6DACbN,EADa,iDACkCO,UAAUF,GAD5C,+DAEIG,MAAMR,GAFV,cAEbS,EAFa,gBAGCA,EAAUC,OAHX,uBAGZC,EAHY,EAGZA,KAEDC,EAAKD,EAAKE,KAAI,SAAAC,GAClB,MAAM,CACJC,GAAGD,EAAMC,GACThB,MAAMe,EAAMf,MACZC,IAAIc,EAAME,OAAOC,iBAAiBjB,QATnB,kBAaZY,GAbY,4CAAD,sDCyBLM,EAtBC,SAACpC,GACf,IAAQuB,EAAavB,EAAbuB,SACR,ECF0B,SAACA,GAE3B,MAA0BtB,mBAAS,CACjC4B,KAAM,GACNQ,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAVAC,qBAAU,WACRlB,EAAQC,GACLkB,MAAK,SAAAC,GACJH,EAAS,CACPV,KAAMa,EACNL,SAAS,SAGd,CAACd,IAEGe,EDf4BK,CAAapB,GAAxCc,EAAR,EAAQA,QAAcO,EAAtB,EAAiBf,KAEjB,OACE,qCACE,oBAAIV,UAAU,mCAAd,SAAkDI,IACjDc,GAAW,2CACZ,qBAAKlB,UAAU,YAAf,SAEIyB,EAASb,KAAI,SAAAW,GAAG,OACd,cAAC,EAAD,eAEMA,GADCA,EAAIT,aEYRY,EAvBM,WACnB,MAAiC5C,mBAAS,CAAC,cAA3C,mBAAOS,EAAP,KAAkBN,EAAlB,KAEA,OACE,qCACE,8CACA,cAAC,EAAD,CACEA,cAAeA,IAEjB,uBAEA,6BACGM,EAAWqB,KAAI,SAAAe,GAAG,OACjB,cAAC,EAAD,CACEvB,SAAUuB,GACLA,YCPFC,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBR,MAAK,YAAkD,IAA/CS,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1BZ,M","file":"static/js/main.23c744a9.chunk.js","sourcesContent":["import {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = (props) => {\r\n  const [inputValue, setInputValue] = useState('');\r\n  const {setCategorias}=props;\r\n\r\n  const handleInputValue=e=>{\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit=e=>{\r\n    e.preventDefault();\r\n    \r\n    if(inputValue.trim().length>0){\r\n      setCategorias(categorias=>[inputValue,...categorias]);\r\n      setInputValue('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type='text'\r\n        value={inputValue}\r\n        onChange={handleInputValue}\r\n        placeholder='Ingresa cualquier texto ejemplo(guko,naruto,mxico,barcelona,etc..)'\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes={\r\n  setCategorias:PropTypes.func.isRequired\r\n};\r\n\r\nexport default AddCategory;","import React from 'react';\r\n\r\nconst GifGridItem = ({title,url}) => {\r\n  return (\r\n    <div className='card animate__animated animate__fadeInDown'>\r\n      <img src={url} alt={title}/>\r\n      <p>{title}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GifGridItem;","export const getGifs=async(category)=>{\r\n  const url= `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=TLMf5a0DXObczQXurI1drrG4WvQcUsDR`;\r\n  const respuesta= await fetch(url);\r\n  const {data}= await respuesta.json();\r\n\r\n  const gifs=data.map(image=>{\r\n    return{\r\n      id:image.id,\r\n      title:image.title,\r\n      url:image.images.downsized_medium.url\r\n    };\r\n  });\r\n\r\n  return gifs;\r\n};","import GifGridItem from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nconst GifGrid = (props) => {\r\n  const { category } = props;\r\n  const { loading, data:imagenes } = useFetchGifs(category);\r\n\r\n  return (\r\n    <>\r\n      <h3 className='animate__animated animate__pulse'>{category}</h3>\r\n      {loading && <p>Loading...</p>}\r\n      <div className='card-grid'>\r\n        {\r\n          imagenes.map(img => (\r\n            <GifGridItem\r\n              key={img.id}\r\n              {...img}\r\n            />\r\n          ))\r\n        }\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifGrid;","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category)\r\n      .then(img => {\r\n        setState({\r\n          data: img,\r\n          loading: false\r\n        })\r\n      });\r\n  }, [category]);\r\n\r\n  return state;\r\n\r\n};","import {useState} from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n  const [categorias,setCategorias]=useState(['One Punch']);\r\n\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory\r\n        setCategorias={setCategorias}\r\n      />\r\n      <hr />\r\n\r\n      <ol>\r\n        {categorias.map(cat=>\r\n          <GifGrid \r\n            category={cat}\r\n            key={cat}\r\n          />\r\n        )}\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifExpertApp;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GifExpertApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}